[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sc_linac_physics"
version = "2.0.1"
description = "Controls, analysis, and displays for SC Linac operations"
readme = "README.md"
requires-python = ">=3.12"
license = { file = "LICENSE" }
authors = [
    { name = "Lisa Zacarias", email = "zacarias@slac.stanford.edu" },
    { name = "Sebastian Aderhold", email = "aderhold@slac.stanford.edu" },
    { name = "Derikka Bisi", email = "dabisi@slac.stanford.edu" },
    { name = "Haley Marts", email = "hmarts@slac.stanford.edu" }
]

dependencies = [
    "pydm",
    "numpy",
    "qtpy",
    "PyQt5",
    "pyyaml",
    "pydantic",
    "h5py",
    "requests",
    "scipy",
    "scikit-learn",
    "matplotlib",
    "caproto",
    "pyqtgraph",
    "urllib3",
    "edmbutton @ git+https://github.com/slaclab/edmbutton.git",
    "lcls-tools @ git+https://github.com/slaclab/lcls-tools.git"
]

[project.optional-dependencies]
test = ["pytest", "pytest-qt", "pytest-cov", "pytest-asyncio"]
dev = [
    "black",
    "flake8",
    "pre-commit",
    "pytest",
    "pytest-qt",
    "pytest-cov",
    "pytest-asyncio",
    "build",
    "twine",
    "check-manifest",
]

[tool.black]
line-length = 80
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/build/
^/dist/
^/.eggs/
^/docs/
'''

[tool.flake8]
max-line-length = 120
max-complexity = 10
extend-ignore = [
    "E203", # whitespace before ':' - conflicts with black
    "W503"   # line break before binary operator - conflicts with black
]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
]
per-file-ignores = [
    "__init__.py:F401"  # ignore unused imports in __init__.py files
]

[tool.pytest.ini_options]
addopts = "-vv -ra --durations=10 --cov=sc_linac_physics --cov-report=term-missing --cov-report=html"
log_cli = true
log_cli_level = "INFO"
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore:.*autoRangeEnabled.*:DeprecationWarning"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.setuptools]
package-dir = { "" = "src" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["sc_linac_physics*"]
exclude = ["tests*", "docs*", "examples*", "logfiles*"]

[tool.setuptools.package-data]
"sc_linac_physics" = [
    "displays/**/*",
    "applications/q0/calibrations/*",
    "applications/q0/data/*",
    "*.ui",
    "*.yaml",
    "*.yml",
    "*.json",
    "*.csv"
]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "src/sc_linac_physics/__init__.py:__version__",
]
branch = "main"
changelog_file = "CHANGELOG.md"
build_command = "python -m build"
upload_to_repository = false
upload_to_release = true
major_on_zero = false
tag_format = "v{version}"
commit_message = "chore(release): {version} [skip ci]"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["feat", "fix", "perf", "docs", "style", "chore", "test", "build", "ci", "refactor"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf", "refactor"]

[project.scripts]
# ============================================================================
# Main CLI
# ============================================================================
sc-linac = "sc_linac_physics.cli:main"

# ============================================================================
# Display Launchers
# ============================================================================
sc-srf-home = "sc_linac_physics.launchers:launch_srf_home"
sc-cavity = "sc_linac_physics.launchers:launch_cavity_display"
sc-faults = "sc_linac_physics.launchers:launch_fault_decoder"
sc-fcount = "sc_linac_physics.launchers:launch_fault_count"

# ============================================================================
# Application Launchers
# ============================================================================
sc-quench = "sc_linac_physics.launchers:launch_quench_processing"
sc-setup = "sc_linac_physics.launchers:launch_auto_setup"
sc-q0 = "sc_linac_physics.launchers:launch_q0_measurement"
sc-tune = "sc_linac_physics.launchers:launch_tuning"

# ============================================================================
# Setup CLI - Hierarchical Control
# ============================================================================
# Global (all cryomodules)
sc-setup-all = "sc_linac_physics.applications.auto_setup.launcher.srf_global_setup_launcher:main"

# Linac level
sc-setup-linac = "sc_linac_physics.applications.auto_setup.launcher.srf_linac_setup_launcher:main"

# Cryomodule level
sc-setup-cm = "sc_linac_physics.applications.auto_setup.launcher.srf_cm_setup_launcher:main"

# Cavity level
sc-setup-cav = "sc_linac_physics.applications.auto_setup.launcher.srf_cavity_setup_launcher:main"

# ============================================================================
# Watcher Management
# ============================================================================
sc-watcher = "sc_linac_physics.cli.watcher_commands:main"

# ============================================================================
# Simulation/Testing
# ============================================================================
sc-sim = "sc_linac_physics.utils.simulation.sc_linac_physics_service:main"

[tool.check-manifest]
ignore = [
    # Build artifacts
    "*.egg-info",
    "*.egg-info/*",
    "**/__pycache__",
    "**/*.pyc",
    "**/*.pyo",

    # Development files
    "tests",
    "tests/**/*",
    ".github",
    ".github/**/*",
    ".flake8",
    "requirements.txt",
    "*.sh",
    "Makefile",
    ".git*",
    ".pre-commit-config.yaml",

    # Test data (in git but not in distribution)
    "src/sc_linac_physics/applications/microphonics/test_data",
    "src/sc_linac_physics/applications/microphonics/test_data/*",
]
